import com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'com.diffplug.spotless' version '6.13.0'
}

spotless {
    java {
        importOrder()
        googleJavaFormat('1.7')
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

repositories {
    // Use Maven Central for resolving dependencies.
    maven { url 'https://maven.aliyun.com/repository/public/' }
    mavenLocal()
    mavenCentral()
}

dependencies {
    def springVersion = '5.2.8.RELEASE'
    def springBootVersion = '2.3.3.RELEASE'
    implementation project(':basic-components')
    implementation project(':utils')
    implementation project(':mysql-driver-extended')

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'
    // https://mvnrepository.com/artifact/org.springframework/spring-jdbc
    compileOnly group: 'org.springframework', name: 'spring-jdbc', version: springVersion
    // https://mvnrepository.com/artifact/org.springframework/spring-context
    compileOnly group: 'org.springframework', name: 'spring-context', version: springVersion
    // https://mvnrepository.com/artifact/org.springframework/spring-core
    compileOnly group: 'org.springframework', name: 'spring-core', version: springVersion
    // https://mvnrepository.com/artifact/org.springframework/spring-beans
    compileOnly group: 'org.springframework', name: 'spring-beans', version: springVersion
    // https://mvnrepository.com/artifact/org.springframework/spring-web
    compileOnly group: 'org.springframework', name: 'spring-web', version: springVersion
    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-csv
    implementation group: 'org.apache.commons', name: 'commons-csv', version: '1.9.0'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    compileOnly group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    compileOnly group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.30'

    // https://mvnrepository.com/artifact/org.apache.tomcat.embed/tomcat-embed-core
    compileOnly group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '9.0.37'
    // https://mvnrepository.com/artifact/com.alibaba/druid
    implementation group: 'com.alibaba', name: 'druid', version: '1.1.21'

    // https://mvnrepository.com/artifact/com.alibaba/fastjson
    implementation group: 'com.alibaba', name: 'fastjson', version: '2.0.9'
    // https://mvnrepository.com/artifact/com.beust/jcommander
    implementation group: 'com.beust', name: 'jcommander', version: '1.78'
    // https://mvnrepository.com/artifact/org.apache.httpcomponents.client5/httpclient5
    implementation group: 'org.apache.httpcomponents.client5', name: 'httpclient5', version: '5.1.3'

    // https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api
    compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-autoconfigure
    compileOnly group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: springBootVersion
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot
    compileOnly group: 'org.springframework.boot', name: 'spring-boot', version: springBootVersion

}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

build {
    dependsOn spotlessJavaApply
}

shadowJar {
    archiveClassifier.set('')
    manifest {
        attributes 'Implementation-Title': 'WeBridge Common'
    }
//    transform(Log4j2PluginsCacheFileTransformer)
    relocate 'com.alibaba.fastjson2', 'webridge.common.alibaba.fastjson2'
//    relocate 'com.mysql', 'webridge.common.mysql'
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'webridge'
            artifactId = 'webridge-common'
            version = '0.1'

            artifact shadowJar
            artifact sourcesJar
        }
    }
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
