DROP PROCEDURE IF EXISTS `AddCart_sp_10_ver0`;
DELIMITER $$
CREATE PROCEDURE AddCart_sp_10_ver0 ()
BEGIN

DECLARE QUERY_ID_0_TXN INT DEFAULT NULL;
DECLARE QUERY_ID_1 INT DEFAULT NULL;
DECLARE RS_q31_r1_col1 BIGINT DEFAULT NULL;
DECLARE M_I_RS_31_size INT DEFAULT NULL;
DECLARE cursor_cnt_1 INT DEFAULT NULL;
DECLARE cursor_1 int DEFAULT NULL;
DECLARE indicator_1 int DEFAULT NULL;
DECLARE q3_i1 BIGINT DEFAULT NULL;
DECLARE q3_i2 BIGINT DEFAULT NULL;
DECLARE QUERY_ID_2 INT DEFAULT NULL;
DECLARE M_I_RS_524_rowCount INT DEFAULT NULL;
DECLARE cursor_cnt_2 INT DEFAULT NULL;

IF TRUE THEN
SET QUERY_ID_0_TXN = 0;
set autocommit=0;
END IF;
IF TRUE THEN
SET QUERY_ID_1 = 1;
SET indicator_1 = 0;
SET cursor_cnt_1 = 0;
BEGIN
DECLARE cursor_1 CURSOR FOR SELECT SEQ_COUNT FROM SM_SEQUENCER WHERE SEQ_NAME = 'SHP_CRT_ITM_SEQ_NEXT_VAL' FOR UPDATE;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET indicator_1 = 1;
OPEN cursor_1;
loop_1: LOOP
IF cursor_cnt_1=0 THEN
FETCH cursor_1 INTO RS_q31_r1_col1;
END IF;
IF cursor_cnt_1>=1 THEN
CLOSE cursor_1; LEAVE loop_1;END IF;
IF indicator_1=1 THEN CLOSE cursor_1; LEAVE loop_1; END IF;
SET cursor_cnt_1 = cursor_cnt_1 + 1;
END LOOP loop_1;
END;
SET cursor_cnt_1 = FOUND_ROWS();
SELECT cursor_cnt_1,RS_q31_r1_col1;
SET M_I_RS_31_size = cursor_cnt_1;
END IF;
IF TRUE THEN
IF cursor_cnt_1 > 0 THEN
SET q3_i1 = (RS_q31_r1_col1+1);
SET q3_i2 = RS_q31_r1_col1;
SET QUERY_ID_2 = 2;
SAVEPOINT trace0_p2;
UPDATE SM_SEQUENCER SET SEQ_COUNT = q3_i1 WHERE SEQ_COUNT = q3_i2 AND SEQ_NAME = 'SHP_CRT_ITM_SEQ_NEXT_VAL';
SET M_I_RS_524_rowCount = ROW_COUNT();
SELECT M_I_RS_524_rowCount;
END IF;
END IF;
SELECT QUERY_ID_0_TXN,QUERY_ID_1,QUERY_ID_2,q3_i1,q3_i2;

END $$
DELIMITER ;